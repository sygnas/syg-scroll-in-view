{"version":3,"file":"scroll-inview.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Scroll in viewport add data attribute\n * スクロールしてビューポートに入ったらdata属性を与える\n *\n * @author   Hiroshi Fukuda <info.sygnas@gmail.com>\n * @license  MIT\n */\n\nimport throttle from '@sygnas/throttle';\n\n\n// デフォルト値\nconst defaults = {\n    offset: 50,\n    doc_bottom_offset: 50,\n    on_view: function() {}\n};\n\nconst ATTR_INVIEW = 'data-inview';\nconst ATTR_INVIEW_OFFSET = 'data-inview-offset';\n\n\n/**\n * エレメント情報を格納したクラス\n */\nclass TargetClass {\n    constructor(elm) {\n        // ビューポートに入ったかチェックするエレメント\n        this.elm = elm;\n        // ビューポートの判定オフセット\n        this.offset = 0;\n        // ドキュメント内の座標\n        this.top = 0;\n        // ドキュメント内の座標＋エレメント高さ\n        this.bottom = 0;\n        // 表示したか\n        this.is_inview = false;\n    }\n}\n\n\n/**\n * in view controller\n */\nexport default class {\n\n    /**\n     * コンストラクタ\n     * @param {string} target DOM selector string\n     * @param {object} config\n     */\n    constructor(target, config) {\n\n        this.opt = Object.assign(defaults, config);\n        // 対象エレメントのセレクタ文字列\n        this.target_string = target;\n        // 対象エレメントと、座標を格納したリスト\n        this.target_list = [];\n        // 開始したか\n        this.is_started = false;\n        // ウィンドウの高さ\n        this.win_height = 0;\n        // ドキュメント全体の高さ\n        this.doc_height = 0;\n        // 対象エレメントの高さをチェックするための setInterval ID\n        this.interval_id = null;\n        // スクロールイベント\n        this.ev_scroll = null;\n        // リサイズイベント\n        this.ev_resize = null;\n\n        // ターゲットエレメントを取得\n        this.reset_target();\n    }\n\n    /**\n     * エレメント、top座標、bottom座標を格納したクラスの配列を作り直す\n     * @public\n     */\n    reset_target() {\n        const opt = this.opt;\n        this.target_list = [];\n\n        const node_list = document.querySelectorAll(this.target_string);\n\n        get_node_array(node_list).forEach((elm) => {\n            const target = new TargetClass(elm);\n            const offset = Number.parseInt(elm.getAttribute(ATTR_INVIEW_OFFSET), 10);\n            target.offset =  offset || opt.offset;\n            this.target_list.push(target);\n        });\n    }\n\n    /**\n     * スクロール検知処理を開始\n     * @public\n     */\n    start() {\n\n        // すでに開始していたら無視\n        if (this.is_started) return;\n\n        // 各アイテムの高さをチェック\n        this.$_check_element_position();\n\n        // ウィンドウ、ドキュメントの高さをチェック\n        this.ev_resize = throttle(50, this.$_check_document_height, this);\n        window.addEventListener('resize', this.ev_resize);\n        this.$_check_document_height();\n\n        // スクロールイベント\n        this.ev_scroll = throttle(40, this.$_check_inview, this);\n        window.addEventListener('scroll', this.ev_scroll);\n        this.$_check_inview();\n\n        this.is_started = true;\n    }\n\n    /**\n     * ビューポート判定を全て停める\n     * @public\n     */\n    stop() {\n        window.removeEventListener('scroll', this.ev_scroll);\n        window.removeEventListener('resize', this.ev_resize);\n        this.is_started = false;\n    }\n\n\n    /**\n     * プライベートメソッド\n     */\n\n    /**\n     * 対象エレメントの上下座標をチェックして、this.target_list のオブジェクトを更新\n     */\n    $_check_element_position() {\n        this.target_list.forEach((target) => {\n            const elm = target.elm;\n            const scroll_top = window.pageYOffset;\n            const rect = elm.getBoundingClientRect();\n            target.top = scroll_top + rect.top;\n            target.bottom = scroll_top + rect.bottom;\n        });\n    }\n\n    /**\n    * ウィンドウをリサイズしたら高さなどをチェック\n    */\n    $_check_document_height() {\n        this.win_height = window.window.innerHeight;\n        this.doc_height = document.documentElement.scrollHeight;\n    }\n\n    /**\n     * スクロール処理\n     * 各エレメントが画面内に存在するか\n     */\n    $_check_inview() {\n        let is_all_inview = true;\n\n        // スクロール上位置と下位置\n        const scroll_top = window.pageYOffset;\n        const scroll_bottom = scroll_top + this.win_height;\n\n        // 場面下端までいったら強制的に全部表示して、scroll処理を止める\n        if(this.$_check_arrived_document_bottom(scroll_bottom)) {\n            return;\n        }\n\n        // 対象エレメントを順にチェック\n        // 全てのエレメントが表示されたら is_all_inview が true になる\n        this.target_list.forEach((target) => {\n            is_all_inview =\n                this.$_check_inview_target(target, scroll_top, scroll_bottom)\n                && is_all_inview;\n        });\n\n        // 全てのエレメントが表示されたら処理を止める\n        if(is_all_inview) this.stop();\n    }\n\n    /**\n     * ドキュメント下端までスクロールしたら、強制的に全表示。\n     * スクロール検知も止める\n     * @param {Number} scroll_bottom 画面の下端座標\n     * @return {Boolean} 画面下端までスクロールしたら ture を返す\n     */\n    $_check_arrived_document_bottom(scroll_bottom) {\n        if(scroll_bottom >= this.doc_height - this.opt.doc_bottom_offset) {\n\n            this.target_list.forEach((target) => {\n                this.$_set_target_visible(target, true);\n            });\n            this.stop();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 指定されたターゲットエレメントがビューポートにあるかチェック\n     * @param {Object} target エレメント、上下座標を格納したオブジェクト\n     * @param {Number} scroll_top ウィンドウのスクロール座標上辺\n     * @param {Number} scroll_bottom ウィンドウのスクロール座標下辺\n     * @return {Boolean} ビューポートに入って表示したら true を返す\n     */\n    $_check_inview_target(target, scroll_top, scroll_bottom) {\n        // すでにビューポートに入って表示されていたら無視\n        if (target.is_inview) return true;\n\n        // 画面内に入っていたら、通り過ぎていたら data-inview=\"true\" にする\n        if (target.top + target.offset <= scroll_bottom) {\n            this.$_set_target_visible(target, true);\n        }\n\n        return target.is_inview;\n    }\n\n    /**\n     * ターゲットエレメントの表示・非表示切り替え\n     * @param {*} TargetClass ターゲットクラス\n     * @param {*} bool 表示は true / 非表示は false\n     */\n    $_set_target_visible(target, bool) {\n        target.elm.setAttribute(ATTR_INVIEW, bool ? 'true' : 'false');\n        target.is_inview = bool;\n    }\n}\n\n\n/**\n * NodeListをArrayとして取り出す（IE対策）\n */\nfunction get_node_array(node_list) {\n    return Array.prototype.slice.call(node_list, 0);\n}\n\n"],"names":["defaults","ATTR_INVIEW","ATTR_INVIEW_OFFSET","TargetClass","elm","offset","top","bottom","is_inview","target","config","opt","Object","assign","target_string","target_list","is_started","win_height","doc_height","interval_id","ev_scroll","ev_resize","reset_target","node_list","document","querySelectorAll","forEach","Number","parseInt","getAttribute","push","$_check_element_position","throttle","$_check_document_height","addEventListener","$_check_inview","removeEventListener","scroll_top","window","pageYOffset","rect","getBoundingClientRect","innerHeight","documentElement","scrollHeight","is_all_inview","scroll_bottom","$_check_arrived_document_bottom","$_check_inview_target","stop","doc_bottom_offset","$_set_target_visible","bool","setAttribute","get_node_array","Array","prototype","slice","call"],"mappings":"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"}